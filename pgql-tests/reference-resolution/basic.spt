module select

language pgql-lang

test Vertex from MATCH in SELECT [[

  SELECT [[n]], in_degree([[n]]) AS inDegree, [[n]].tax_rate * [[n]].salary AS tax_amount
   MATCH ([[n]])
]] resolve #1 to #5
   resolve #2 to #5
   resolve #3 to #5
   resolve #4 to #5

test Edge from MATCH in SELECT [[

  SELECT [[e]], label([[e]]) AS lbl, [[e]].weight AS weight
   MATCH (n) -[ [[e]]:likes ]-> (m)

]] resolve #1 to #4
   resolve #2 to #4
   resolve #3 to #4

test Vertex from MATCH in ORDER BY [[

    SELECT 123 AS x
     MATCH ([[n]])
  ORDER BY in_degree([[n]]), [[n]].tax_rate * [[n]].salary

]] resolve #2 to #1
   resolve #3 to #1
   resolve #4 to #1

test Edge from MATCH in ORDER BY [[

    SELECT 123 AS x
     MATCH (n) -[ [[e]]:likes ]-> (m)
  ORDER BY label([[e]]), [[e]].weight

]] resolve #2 to #1
   resolve #3 to #1

test Variable from SELECT in ORDER BY [[

    SELECT n.tax_rate * n.salary AS [[tax_amount]]
     MATCH (n)
  ORDER BY [[tax_amount]]

]] resolve #2 to #1

test Variable from GROUP BY in SELECT [[

    SELECT [[nAge]] AS age
     MATCH (n)
  GROUP BY n.age AS [[nAge]]

]] resolve #1 to #2

test Variable from GROUP BY in ORDER BY [[

    SELECT [[nAge]]
     MATCH (n)
  GROUP BY n.age AS nAge
  ORDER BY [[nAge]]

]] resolve #2 to #1

test Variable from MATCH in aggregation in SELECT #1 [[

  SELECT AVG([[n]].salary) AS avgSalary
   MATCH ([[n]])

]] resolve #1 to #2

test Variable from MATCH in aggregation in SELECT #2 [[

    SELECT AVG([[n]].salary) AS avgSalary
     MATCH ([[n]])
  GROUP BY n.age AS nAge

]] resolve #1 to #2

test Variable from MATCH in aggregation in ORDER BY #1 [[

    SELECT SUM(n.salary) AS sum
     MATCH ([[n]])
  ORDER BY AVG([[n]].salary)

]] resolve #2 to #1

test Variable from MATCH in aggregation in ORDER BY #2 [[

    SELECT nAge
     MATCH ([[n]])
  GROUP BY n.age AS nAge
  ORDER BY AVG([[n]].salary)

]] resolve #2 to #1

test Mixed aggregation and non-aggregation in SELECT [[

    SELECT n.age AS nAge2, AVG([[n]].salary) AS avg
     MATCH ([[n]])
  GROUP BY n.age AS nAge

]] resolve #1 to #2

test Mixed aggregation and non-aggregation in ORDER BY [[

    SELECT nAge
     MATCH ([[n]])
  GROUP BY n.age AS nAge
  ORDER BY AVG([[n]].salary), n.age

]] resolve #2 to #1


test Can't reference previous SELECT element [[

  SELECT x AS n, [[n]]
   MATCH (x) -> ([[n]])

]] resolve #1 to #2

test Can't reference previous GROUP BY element [[

  SELECT x
   MATCH (x) -> ([[n]])
  GROUP BY x AS n, [[n]]

]] resolve #2 to #1

test Resolve variables in property references (but not other variables) in ORDER BY to FROM before SELECT #1 [[

    SELECT n.name AS [[n]]
     MATCH ([[n]])
  ORDER BY [[n]].age, [[n]]

 ]] resolve #3 to #2
    resolve #4 to #1

test Resolve variables in property references (but not other variables) in ORDER BY to FROM before SELECT #2 [[

    SELECT n.name AS [[n]]
     MATCH ([[n]])
  ORDER BY EXISTS ( SELECT * MATCH (m) WHERE m.age = [[n]].age ), [[n]].age, [[n]]

 ]] resolve #3 to #2
    resolve #4 to #2
    resolve #5 to #1